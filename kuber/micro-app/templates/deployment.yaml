apiVersion: apps/v1 #Версія API Kubernetes, що використовужться для створенян ресурсу. 
kind: Deployment #Тип ресурсу. Цей маніфест використовується для стоврення Deployment.
metadata:
  name: {{ .Release.Name }}-{{ .Values.name }} #Отримання назви ресурсу з об'єкту .Release.Name Helm.
  namespace: {{ .Values.namespace }} #Отримання простору імен з ресурсу Helm.
spec:
  replicas: {{ .Values.replicas }}  #Отримання кількості реплік з ресурсу Helm.
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.name }} #Отримання значення міток, яким повинні відповідати поди.
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.name }} #Отримання значення міток, яким повинні відповідати шаблони.
    spec:
      containers:
        - name: {{ .Values.containers.usersApi.name }}
          image: {{ .Values.containers.usersApi.image.repository }}:{{ .Values.containers.usersApi.image.tag }} #Отримання даних образу, який буде використовуватися для створення контейнерів.
          ports:
            - containerPort: {{ .Values.containers.usersApi.port }} #Отримання значення портів для контейнеру.
#Всі назви змінних вказуть на розташування їх даних у структурі Helm. Наприклад, змінна .Values.image.repository вказує, що її значення знаходиться у файлі values.yaml у розділі image у рядку repository.
#Змінна .Release.Name містить унікальне ім'я об'єкту, яке зберігається у внутрішній базі Helm, або може будти отримано із зовнішньої бази даних.
        - name: {{ .Values.containers.todosApi.name }}
          image: {{ .Values.containers.todosApi.image.repository }}:{{ .Values.containers.todosApi.image.tag }} #Отримання даних образу, який буде використовуватися для створення контейнерів.
          ports:
            - containerPort: {{ .Values.containers.todosApi.port }}
        - name: {{ .Values.containers.logMessageProcessor.name }}
          image: {{ .Values.containers.logMessageProcessor.image.repository }}:{{ .Values.containers.logMessageProcessor.image.tag }} #Отримання даних образу, який буде використовуватися для створення контейнерів.
          ports:
            - containerPort: {{.Values.containers.logMessageProcessor.port}}        
        - name: {{.Values.containers.frontend.name}}
          image: {{.Values.containers.frontend.image.repository}}:{{.Values.containers.frontend.image.tag }} #Отримання даних образу, який буде використовуватися для створення контейнерів.
          ports:
            - containerPort: {{.Values.containers.frontend.port}}
        - name: {{.Values.containers.authApi.name}}
          image: {{.Values.containers.authApi.image.repository}}:{{.Values.containers.authApi.image.tag }} #Отримання даних образу, який буде використовуватися для створення контейнерів.
          ports:
            - containerPort: {{.Values.containers.authApi.port}}
        - name: {{.Values.containers.zipkin.name}}
          image: {{.Values.containers.zipkin.image.repository}}:{{.Values.containers.zipkin.image.tag }} #Отримання даних образу, який буде використовуватися для створення контейнерів.
          ports:
            - containerPort: {{.Values.containers.zipkin.port}}
      imagePullSecrets:
        - name: {{ .Values.secretName}}